from aiogram import Router, types, F

from core import transcribe_core

router = Router()

@router.message(F.voice)
async def transcribe_voice_message(message: types.Message):
    if message.chat.type == 'private':
        await message.answer(
            '–ê—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, —Å–µ–π—á–∞—Å –≤—ã–¥–∞–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é üòá\n'
            '–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è ‚è≥'
        )
    print(f"Got a voice message in {message.chat.type} chat")
    await transcribe_core.transcribe_audio_and_send_to_user(message)

@router.channel_post(F.voice)
async def transcribe_channel_voice(message: types.Message):
    print("Got a voice message from a channel")
    await transcribe_core.transcribe_audio_and_send_to_user(message, is_channel=True)