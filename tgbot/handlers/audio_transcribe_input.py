from aiogram import Router, types, F
from core import transcribe_core

router = Router()


@router.message(F.voice | F.audio)
async def transcribe_voice_message(message: types.Message):
    try:
        if message.chat.type == 'private':
            await message.answer(
                '–ê—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, —Å–µ–π—á–∞—Å –≤—ã–¥–∞–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é üòá\n'
                '–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è ‚è≥'
            )
        print(f"Got an audio message in {message.chat.type} chat")
        await transcribe_core.transcribe_audio_and_send_to_user(message)
    except Exception as e:
        print(f"Unexpected error in transcribe_voice_message: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.channel_post(F.voice | F.audio)
async def transcribe_channel_voice(message: types.Message):
    try:
        print("Got an audio message from a channel")
        await transcribe_core.transcribe_audio_and_send_to_user(message, is_channel=True)
    except Exception as e:
        print(f"Unexpected error in transcribe_channel_voice: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_to_message_id=message.message_id,
        )
